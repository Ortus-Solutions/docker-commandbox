name: Release

on:
  # Trigger the workflow on push or pull request,
  # but only for the main branch
  push:
    branches:
      - master
      - development
    tags:
      - v*

jobs:
  publish:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        include:
          - BUILD_IMAGE_DOCKERFILE : builds/Base.Dockerfile 
            BASE_BUILD_FILE: builds/base/Dockerfile 
            BUILD_IMAGE_TAG: latest
          # - BUILD_IMAGE_DOCKERFILE : builds/Base.Dockerfile 
          #   BASE_BUILD_FILE: builds/base/JRE8.Dockerfile 
          #   BUILD_IMAGE_TAG: jdk8
          # - BUILD_IMAGE_DOCKERFILE : builds/Lucee5.Dockerfile 
          #   BASE_BUILD_FILE: builds/base/Dockerfile 
          #   BUILD_IMAGE_TAG: lucee5
          # - BUILD_IMAGE_DOCKERFILE : builds/LuceeLight.Dockerfile 
          #   BASE_BUILD_FILE: builds/base/Dockerfile 
          #   BUILD_IMAGE_TAG: lucee-light
          # - BUILD_IMAGE_DOCKERFILE : builds/Adobe2016.Dockerfile 
          #   BASE_BUILD_FILE: builds/base/JRE8.Dockerfile 
          #   BUILD_IMAGE_TAG: adobe2016
          # - BUILD_IMAGE_DOCKERFILE : builds/Adobe2018.Dockerfile 
          #   BASE_BUILD_FILE: builds/base/Dockerfile 
          #   BUILD_IMAGE_TAG: adobe2018
          # - BUILD_IMAGE_DOCKERFILE : builds/Adobe2021.Dockerfile 
          #   BASE_BUILD_FILE: builds/base/Dockerfile 
          #   BUILD_IMAGE_TAG: adobe2021

          # Alpine builds
          # Note: No JDK builders currently support alpine with ARM
          # - BUILD_IMAGE_DOCKERFILE : builds/Base.Alpine.Dockerfile 
          #   BASE_BUILD_FILE: builds/base/Alpine.Dockerfile 
          #   BUILD_IMAGE_TAG: alpine
          # - BUILD_IMAGE_DOCKERFILE : builds/Base.Alpine.Dockerfile 
          #   BASE_BUILD_FILE: builds/base/Alpine.JRE8.Dockerfile 
          #   BUILD_IMAGE_TAG: jdk8-alpine
          # - BUILD_IMAGE_DOCKERFILE : builds/Lucee5.Dockerfile 
          #   BASE_BUILD_FILE: builds/base/Alpine.Dockerfile 
          #   BUILD_IMAGE_TAG: lucee5-alpine
          # - BUILD_IMAGE_DOCKERFILE : builds/LuceeLight.Dockerfile 
          #   BASE_BUILD_FILE: builds/base/Alpine.Dockerfile 
          #   BUILD_IMAGE_TAG: lucee-light-alpine
          # - BUILD_IMAGE_DOCKERFILE : builds/Adobe2016.Dockerfile 
          #   BASE_BUILD_FILE: builds/base/Alpine.JRE8.Dockerfile 
          #   BUILD_IMAGE_TAG: adobe2016-alpine
          # - BUILD_IMAGE_DOCKERFILE : builds/Adobe2018.Dockerfile 
          #   BASE_BUILD_FILE: builds/base/Alpine.Dockerfile 
          #   BUILD_IMAGE_TAG: adobe2018-alpine
          # - BUILD_IMAGE_DOCKERFILE : builds/Adobe2021.Dockerfile 
          #   BASE_BUILD_FILE: builds/base/Alpine.Dockerfile 
          #   BUILD_IMAGE_TAG: adobe2021-alpine
    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Set up QEMU
        uses: docker/setup-qemu-action@master
        with:
          platforms: all

      - name: Set up Docker Buildx
        id: buildx
        uses: docker/setup-buildx-action@master

      - name: Setup Builds
        id: setup
        env:
          DOCKER_IMAGE : ortussolutions/commandbox
          BUILD_IMAGE_TAG: ${{ matrix.BUILD_IMAGE_TAG }} 
          COMMANDBOX_VERSION: 5.3.1
          IMAGE_VERSION: 3.4.2
        run: | 
          find ${GITHUB_WORKSPACE}/builds/base -type f -exec sed -i '' -e "s/@version@/${IMAGE_VERSION}/g" {} \; 
          
          # Tag Builds
          if [[ $GITHUB_REF == refs/tags/* ]]; then

            if [[ $BUILD_IMAGE_TAG == latest ]]; then
              BUILD_IMAGE_TAG="${GITHUB_REF#refs/tags/v}"
            else
              BUILD_IMAGE_TAG="${BUILD_IMAGE_TAG}-${GITHUB_REF#refs/tags/v}"
            fi

          elif [[ $GITHUB_REF == 'refs/heads/development' ]]; then

            # Snapshot builds
            BUILD_IMAGE_TAG="${BUILD_IMAGE_TAG}-snapshot"
          
          fi

          TAGS="${DOCKER_IMAGE}:${BUILD_IMAGE_TAG}"

          
          # Set output parameters.
          echo ::set-output name=image_version::${IMAGE_VERSION}
          echo ::set-output name=commandbox_version::${COMMANDBOX_VERSION}
          echo ::set-output name=tags::${TAGS}  

      - name: DockerHub Login
        if: github.event_name != 'pull_request'
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      # - name: Build Base
      #   uses: docker/build-push-action@v2
      #   with:
      #     DOCKER_BUILDKIT: 1
      #     builder: ${{ steps.buildx.outputs.name }}
      #     context: .
      #     file: ${{ matrix.BASE_BUILD_FILE }} 
      #     platforms: linux/amd64,linux/arm64
      #     push: false
      #     load: true
      #     build-args: COMMANDBOX_VERSION=${{ steps.setup.outputs.commandbox_version }}
      #     tags: commandbox-base    

      - name: Test
        env:
          DOCKER_BUILDKIT: 1
          COMPOSE_DOCKER_CLI_BUILD: 1
          BUILD_IMAGE_DOCKERFILE: ${{ matrix.BUILD_IMAGE_DOCKERFILE }}
        run: |
          docker-compose -f docker-compose.test.yml up --build --exit-code-from sut
          docker-compose -f docker-compose.secret-test.yml up --build --exit-code-from sut

      - name: Build Final
        uses: docker/build-push-action@v2
        with:
          DOCKER_BUILDKIT: 1
          builder: ${{ steps.buildx.outputs.name }}
          context: .
          file: ${{ matrix.BUILD_IMAGE_DOCKERFILE }}
          platforms: linux/amd64,linux/arm64
          push: true
          tags: ${{ steps.setup.outputs.tags }}    

